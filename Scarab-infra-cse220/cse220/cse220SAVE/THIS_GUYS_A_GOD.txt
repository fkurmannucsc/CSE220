1.) Copy the git repo (branch cse220) to your GitHub account so you can collaborate with your partner (optional, you can just use Litz's repo for step 2)
2.) On your repo that you created on GitHub, click code (green button) -> codespaces -> 3 dots -> new with options
3.) Pick 4gb or 8gb (see [pricing](https://docs.github.com/en/billing/managing-billing-for-your-products/managing-billing-for-github-codespaces/about-billing-for-github-codespaces)). 8gb is *much* smoother.
4.) Once loaded in, run *only* the following command:
    > ./run.sh -o /home/$USER/cse220_home -b 2 && docker exec cse220_$USER chmod -R a+rX /cse220_traces/
5.) Remove all but 1 workload from the workload_list in the `cse220/lab1.json` file so you don't crash the codespace
6.) Try it out with 
    > ./run.sh -o /home/$USER/cse220_home -s 220 -e lab1
    > Wait for scarab to complete
    > ./run.sh -o /home/$USER/cse220_home -e lab1 -p 1 && code /home/$USER/cse220_home/plot/lab1/FigureA.png
7.) NOTE: You can connect to a codespace from your local VSCode instance using the Codespaces extension.
8.) Lemme know if it works!